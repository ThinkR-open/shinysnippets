snippet module
	${1:name}ui <- function(id){
		ns <- NS(id)
		tagList(
		${0}
			)
		}

	${1:name} <- function(input, output, session){
		ns <- session\$ns
	}
	
	# Copy in UI
	#${1:name}ui("${1:name}ui")
	
	# Copy in server
	#callModule(${1:name}, "${1:name}ui")
	
snippet observe_event
	observeEvent( ${1:event} , {
	${0}
	})
	
snippet with_progress
	withProgress( message = "${1:message}" , {
	${0}
	})

snippet aa
	${1:dataset} <- ${1:dataset} %>% ${0}

snippet sidebar_page
    library(shiny)
    
    ui <- fluidPage(
      titlePanel( "${1:title}" ), 
      
      sidebarLayout(
        sidebarPanel(
        
        ),
        mainPanel(
        
        )
      )
    )
    
    server <- function(input, output, session) {
      
    }
    
    shinyApp(ui, server)
    
    

snippet navbarPage_simple
	navbarPage(title = ${1:title},
		tabPanel(title = "first panel"),
		tabPanel(title = "second panel"),
		tabPanel(title = "third panel")
		)
		
snippet navbarPage_with_menu	
	navbarPage(title = ${1:title},
		tabPanel(title = "first panel"),
		tabPanel(title = "second panel"),
		tabPanel(title = "third panel"),
		navbarMenu(title = ${2:menu_title}, 
				tabPanel("fourth panel"),
				tabPanel("fifth panel"),
				tabPanel("sixth panel")
				)

snippet downloadButton

		# To copy in the UI
		downloadButton(outputId = ${1:button_ID}, label = ${2:label})
		# To copy in the server
		output\$${1:button_ID} <- downloadHandler({
					filename = function() {
						paste('data-', Sys.Date(), '.csv', sep='')
					},
					content = function(con) {
						write.csv(${3:df_name}, con)
					}
				})
		# if you want to download in other formats: 
		# replace '.csv' and write.csv() according to the seeked extension.

